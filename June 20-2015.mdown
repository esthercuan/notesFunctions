## Data types Review

You may click [here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures) and get an extensive explanation on Data types: 


1.  Numbers (1,2,3…)
2.  Strings (words in quotations) 
3.  Booleans 
4.  Undefined and null. (Null is when you expect an answer, but there is no answer.)
5.  Array [1,2,3,…]
6.  Objects {object} 

## Variables vs. Literals 

1. Literals do not change. Ex. "Hello Cat" is a string literal.

2. Variables change. Ex. var myCat = "Hello Cat" where **myCat** is a variable that can change depending on what you make it equal to. 

## New syntax on Variables 

Variables can be reset to different values by using the **=** sign. 
	
	var x=2; 
	x= x+10; // x becomes 30 
	x+=2; // x becomes x+2 = 32  
	x-=1; // x becoms x-1 = 31 

You may use all of the math symbols with the **=** sign. ( /=, *=,+=,-=)

## Functions Review 

Remember that returning something from a function is quite important. This way the value returned can be re-used for another purpose.  

#### Exercise 1 in class 

	// Create a function that does String Operations 

	 function concat() {
	 	var firstName = prompt("First Name please");
	 	var lastName = prompt("Last Name please");
	 	var forFun = prompt("what you do for fun");

	 	alert(firstName + " " +lastName + " loves to " + forFun);
	 }

	 concat();

Pseudo code for the above exercise. 

1. Create 3 prompts 
2. Store the prompts in variables 
3. Use the variables to create a string in an alert function


#### Exercise 2 in class 


	/* Create a functions that ads two numbers and returns the value either in console.log or via an alert.*/

	function addTwo (x,y) { 
		console.log(x+y); 
	}

	addTwo(2,3);

Pseudo code: 

1. Create a function that recieves 2 numbers
2. Log to the Console the addition of the 2 numbers
3. Call the function



#### Exercise 3 in class 


	/* Create a functions that computes the average age of three people. */


	// passing argument 

	function averageAge (x,y,z) { //parameters are local
		var average = (x+y+z)/3;	
		console.log(average);

	}

	averageAge (12,15,20);

	// asking for the age to the user 

	function averAge2 () {
		var x = prompt("age 1 please"); 
		var y = prompt("age 2 please"); 
		var z = prompt("age 3 please"); 

		var average2 = ((parseInt(x)+parseInt(y)+parseInt(z))/3);
		console.log(average2.toFixed(2));
	}

	averAge2();

**Methods:** functions specific to a data type, such as .toFixed which runs only on decimals or integers. The difference between a function and a method, is that method **is** a function while a function is a process. 


## Expressions and operators 

[Here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators) is the link to an extensive guide for operators in javascript. 

#### Some new operators seen in class: 

**Module:** is written as `%` and it returns the integer remainder of dividing two operands. `12 % 5` returns `2`. 

**Increment:** is written as `++` and it returns the value of its operand after adding one. This one is used in loops and booleans. Example pseudo code would be: 

1. If x is 3, then `++x` sets x to 4. If you set `x++` it returns 3 and after that it increments x to 4. 


**Comparing** is written as `<` or `>` or `<=` or `>=`
which compare two things. One great us for these is an if and else statemnet. 

## If and Else 

Lets learn the syntax first. 

If I have a pony, then I want to ride. Else, walk. 

	if (have a pony){
		ride
	} else { walk }

## Exercise 4 

Create a function that takes in ages from 4 users and computes the max age of all the users. It returns the oldest person in the group. 

	function compareAge (){

		var person1 = prompt("Person 1 age please"); 
		var person2 = prompt("Person 2 age please"); 
		var person3 = prompt("Person 3 age please"); 
		var person4 = prompt("Person 4 age please"); 

		var person1 = parseInt(person1);
		var person2 = parseInt(person2);
		var person3 = parseInt(person3);
		var person4 = parseInt(person4);


		if (person1>person2){
			var maxAge = person1;
		} else { maxAge = person2};

		if (maxAge>person3){
			return maxAge; 
		} else { maxAge = person3};

		if (maxAge>person4){
			return maxAge; 
		} else { maxAge = person4};

		console.log("The oldest person in this group is" + maxAge);
	}

	compareAge();


Pseudo Code: 

1. ask age of each person
2. chage the prompt to integers
3. Compare age 1 and age 2, return the max
4. Compare the max with age 3 and return the max 
5. Compare the max with age 4 and return the max

There are better ways to do this, but this is how you would do it with only `if` and `else` statements. 





